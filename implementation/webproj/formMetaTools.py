# -*- encoding: utf-8 -*-

import os
from pathlib import Path
from django.utils.translation import ugettext_lazy as _

fmfp = Path('server_secrets', 'form_meta_fields.html')

if fmfp.exists():
    fmfp.unlink()

def add_programatic_field(label):
    if not fmfp.exists():
        fmfp.write_text('{# Autogenerated #}\n')
    with fmfp.open('a') as fp:
        fp.write('{% trans ')
        fp.write(repr(label))
        fp.write(' %}')
        fp.write('\n')

class ModelFormMetaMetaclass(type):
    def __new__(cls, name, bases, dct):
        pcn = dct['__qualname__'].split('.')[0]
        lcname = pcn[:-4].lower() if pcn.endswith('Form') else pcn.lower()
        if 'fields' in dct:
            if 'labels' not in dct:
                dct['labels'] = dict()
            if 'help_texts' not in dct:
                dct['help_texts'] = dict()
            for field in dct['fields']:
                lb = f'form_{lcname}_{field}_label'
                hp = f'form_{lcname}_{field}_help'
                dct['labels'][field] = _(lb)
                dct['help_texts'][field] = _(hp)
                add_programatic_field(lb)
                add_programatic_field(hp)
        x = super().__new__(cls, name, bases, dct)
        return x
